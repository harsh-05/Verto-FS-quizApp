// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
    admin
    student
}


model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  name              String   
  password          String
  role              UserRole
  studentresult     studentResult[]
  studentselection  studentSelections[]
}


model Quiz {
    id            Int             @id @default(autoincrement())
    quizDesc      String
    time_limit    Int?
    questions     Questions[]
    studentresult studentResult[]

}


model Questions {
    id                    Int                  @id @default(autoincrement())
    quesdesc              String
    quizid                Int
    quesScore             Int
    quiz                  Quiz                 @relation(fields: [quizid], references: [id])
    questionoptions       questionOptions[]
    correctoption         correctOption[]
    studentselection      studentSelections[]

}


model questionOptions {
  id                Int       @id @default(autoincrement())
  optionDesc        String
  quesid            Int
  ques              Questions @relation(fields: [quesid], references: [id])
  correctoption     correctOption[]
  studentselection  studentSelections[]
}


model correctOption {
    questionid          Int
    correctOptionid     Int

    ques                Questions         @relation(fields: [questionid], references: [id])
    option              questionOptions   @relation(fields: [correctOptionid], references: [id]) 

    @@id([questionid, correctOptionid])
}

model studentResult {
    studentId         Int
    quizId            Int
    timeTaken         Int
    score             Int
    corrects          Int
    incorrects        Int


    student           User    @relation(fields: [studentId], references: [id])
    quiz              Quiz    @relation(fields: [quizId], references: [id])

    @@unique([studentId, quizId])
}

model studentSelections {
      studentId         Int 
      quesId            Int
      optionId          Int

      student           User                @relation(fields: [studentId], references: [id])
      question          Questions           @relation(fields: [quesId], references: [id])
      option            questionOptions     @relation(fields: [optionId], references: [id])

      @@unique([studentId, quesId, optionId])
}